runconfig:
    name: NISAR_L1-L-RSLC_RUNCONFIG
    groups:
        pge_name_group:
            pge_name: RSLC_L_PGE
        input_file_group:
            input_file_path:
            - input_L0B_RRSD_REE3/NISAR_L0_PR_RRSD_104_159_D_238S_20251011T121909_20251011T122039_A00301_F_J_001.h5
            qa_input_file: output_rslc/rslc.h5
        dynamic_ancillary_file_group:
            dem_file: input_L0B_RRSD_REE3/dem_90_09_945_16_zero_height.tiff
            orbit: input_L0B_RRSD_REE3/NISAR_ANC_L_PR_FOE_20231207T182337_20251011T121909_20251011T122039.xml
            pointing: input_L0B_RRSD_REE3/NISAR_ANC_L_PR_FRP_20231207T182337_20251011T121909_20251011T122039.xml
            external_calibration: input_L0B_RRSD_REE3/NISAR_LSAR_EXT_CAL_20220101T120000_02.yaml
            internal_calibration: input_L0B_RRSD_REE3/NISAR_LSAR_INT_CAL_20220101T120000_01.h5
            antenna_pattern: input_L0B_RRSD_REE3/NISAR_ANTPAT_20230707T142741.h5
            corner_reflector_file: input_L0B_RRSD_REE3/NISAR_ANC_CORNER_REFLECTORS_005.csv
        product_path_group:
            product_path: output_rslc
            scratch_path: scratch_rslc
            sas_output_file: output_rslc/rslc.h5
            sas_config_file: output_rslc/runconfig_rslc.yaml
            qa_output_dir: qa_rslc
            product_counter: 1
        primary_executable:
            product_type: RSLC
            composite_release_id: A00301
            mission_id: NISAR
            processing_type: PR
            product_accuracy: F
        debug_level_group:
            debug_switch: false
        geometry:
            cycle_number: 104
            relative_orbit_number: 159
            frame_number: 82
            orbit_direction: Descending
            track_frame_polygon: '{"type": "Polygon", "coordinates" : [[ ]] }'
            full_coverage_threshold_percent: 75.0
        worker:
            gpu_enabled: True
            gpu_id: 0
        processing:
            output_grid:
                start_time: 2025-10-11T12:19:13
                end_time: 2025-10-11T12:19:48
                start_range:
                end_range:
                output_prf: 1520
                time_snap_interval: 1.0
            range_window:
                kind: Kaiser
                shape: 1.6
            azimuth_window:
                kind: Kaiser
                shape: 0.0
            radio_frequency_interference:
                # Whether to attempt RFI detection and record related metadata.
                # Defaults to True
                detection_enabled: True
                # Whether to attemt RFI removal. Default to False.
                # Requires that RFI detection is also enabled.
                mitigation_enabled: False
                # Algorithm selection.  Defaults to 'ST-EVD' for slow-time
                # eigenvalue decomposition. Currently, only 'ST-EVD' is supported.
                mitigation_algorithm: ST-EVD
                # Coherent processing interval length (pulses).  Defaults to 32.
                cpi_length: 32
                # Number of subdivisions in range.  Defaults to 1.
                num_range_blocks: 40
                # Maximum allowable number of emitters can be detected and
                # suppressed per CPI. ST-EVD would ignore emitters exceeding
                # this limit. This number should be less than cpi_length.
                # Defaults to 16.
                max_emitters: 12
                # Number of large value outliers to be trimmed in slow-time
                # minimum Eigenvalues.
                num_max_trim: 0
                # Number of small value outliers to be trimmed in slow-time
                # minimum Eigenvalues.
                num_min_trim: 0
                # A detection error (miss) happens when a maximum power RFI
                # emitter contaminates multiple consecutive CPIs, resulting in a
                # flat maximum Eigenvalue slope in slow time. Hence the standard
                # deviation (STD) of multiple dominant EVs across slow time
                # defined by this parameter are compared. The one with the
                # maximum STD is used for RFI Eigenvalue first difference
                # computation.
                max_num_rfi_ev: 2
                # Number of slow-time CPIs grouped together for determining and
                # applying a common EV slope threshold.
                num_cpi_per_threshold_block: 30
                # Parameters used to adaptively determine RFI eigenvalue
                # difference thresholds
                threshold_hyperparameters:
                    # The computed sigma ratio of maximum and minimum Eigenvalue
                    # first differences. It is a dimensionless figure of merit.
                    # Larger value of x indicates higher likelihood of RFI
                    # presence.
                    x: [2.0, 20.0]
                    # Estimated range of number of sigmas of the first
                    # difference of minimum Eigenvalues across threshold block
                    # as a function of input x, e.g., smaller x results in
                    # larger value of y, therefore relaxing the final threshold.
                    # The values of x outside of the defined range of y are
                    # extrapolated.
                    y: [5.0, 2.0]
            range_common_band_filter:
                attenuation: 40.0
                width: 0.15
            doppler:
                azimuth_boresight_deg: 0.9
                interp_method: bilinear
                spacing:
                    range: 2000.0
                    azimuth: 1.0
                rdr2geo:
                    threshold: 1e-8
                    maxiter: 25
                    extraiter: 15
            rangecomp:
                mode: full
                block_size:
                    range: 0
                    azimuth: 1024
            azcomp:
                block_size:
                    range: 32768
                    azimuth: 1024
                azimuth_resolution: 6.0
                kernel:
                    type: Knab
                    halfwidth: 4
                    approx_oversample: 1.7
                    fit: Table
                    fit_order: 2048
                rdr2geo:
                    threshold: 1.0e-8
                    maxiter: 25
                    extraiter: 15
                geo2rdr:
                    threshold: 1.0e-8
                    maxiter: 50
                    delta_range: 10.0
            dry_troposphere_model: nodelay
            dem:
                reference_height: 0.0
                interp_method: biquintic
            nominal_antenna_size:
                range: 12.0
                azimuth: 12.0
            encoding_scale_factor: 1.0
            delete_tempfiles: True
            is_enabled:
                presum_blu: True
                rangecomp: True
                eap: True
                range_cor: True
                azcomp: True

        qa:
            workflows:
                # Flag to run `validate` workflow to validate the
                # input file against its product spec.
                # Default: True
                validate: True

                # Flag to run `qa_reports` workflow to generate a
                # PDF report, geolocated browse image, compute statistics
                # on the input file, etc..
                # Default: True
                qa_reports: True

                # Flag to run Absolute Radiometric Calibration calibration tool.
                # Default: True
                absolute_radiometric_calibration: True

                # Flag to run Noise Estimator Tool calibration tool.
                # Default: True
                noise_estimation: True

                # Flag to run Point Target Analyzer calibration tool.
                # Default: True
                point_target_analyzer: True

            qa_reports:
                backscatter_img:
                    # True to compute backscatter in linear units when generating
                    # the backscatter image for the browse images and graphical
                    # summary PDF. False for decibel units.
                    # Default: True
                    linear_units: True

                    # Number of looks along each axis of the Frequency A
                    # image arrays for multilooking the backscatter image.
                    # Format: [<num_rows>, <num_cols>]
                    # Example: [6,7]
                    # If not provided, the QA code to compute the nlooks values
                    # based on `longest_side_max`.
                    # Default: None
                    nlooks_freqa:

                    # Number of looks along each axis of the Frequency B
                    # image arrays for multilooking the backscatter image.
                    # Format: [<num_rows>, <num_cols>]
                    # Example: [6,7]
                    # If not provided, the QA code to compute the nlooks values
                    # based on `longest_side_max`.
                    # Default: None
                    nlooks_freqb:

                    # The maximum number of pixels allowed for the longest side
                    # of the final 2D multilooked browse image. Defaults to 2048.
                    # If `nlooks_freq*` parameter(s) is not None, nlooks
                    # values will take precedence.
                    # Default: 2048
                    longest_side_max: 2048

                    # Percentile range that the image array will be clipped to
                    # and that the colormap covers. Must be in range [0.0, 100.0].
                    # Default: (5.0, 95.0)
                    percentile_for_clipping: [5.0, 95.0]

                    # Gamma correction parameter applied to backscatter and browse image(s).
                    # Gamma will be applied as follows:
                    # array_out = normalized_array ^ gamma
                    # where normalized_array is a copy of the image with values
                    # scaled to the range [0,1].
                    # The image colorbar will be defined with respect to the input
                    # image values prior to normalization and gamma correction.
                    # If None, then no normalization and no gamma correction will be applied.
                    # Default: 0.5
                    gamma: 0.5

                    # User-preferred tile shape for processing images by batches.
                    # Actual tile shape may be modified by QA to be an integer
                    # multiple of the number of looks for multilooking, of the
                    # decimation ratio, etc.
                    # Format: [<num_rows>, <num_cols>]
                    # -1 to indicate all rows / all columns (respectively).
                    # Default: (1024, 1024)
                    tile_shape: [1024, 1024]

                histogram:
                    # Step size to decimate the input array for computing
                    # the backscatter and phase histograms.
                    # For example, [2,3] means every 2nd azimuth line and
                    # every 3rd range sample will be used to compute the histograms.
                    # Format: [<azimuth>, <range>]
                    # Default: (10, 10)
                    decimation_ratio: [10, 10]

                    # Range in dB for the backscatter histogram's bin edges. Endpoint will
                    # be included. Format: [<starting value>, <endpoint>]
                    # Default: (-80.0, 20.0)
                    backscatter_histogram_bin_edges_range: [-80.0, 20.0]

                    # True to compute phase histogram in radians units,
                    # False for degrees units.
                    # Default: True
                    phs_in_radians: True

                    # User-preferred tile shape for processing images by batches.
                    # Actual tile shape may be modified by QA to be an integer
                    # multiple of the number of looks for multilooking, of the
                    # decimation ratio, etc.
                    # Format: [<num_rows>, <num_cols>]
                    # -1 to indicate all rows / all columns (respectively).
                    # Default: (1024, -1)
                    tile_shape: [1024, -1]

            absolute_radiometric_calibration:
                # The width, in samples, of the square block of image data
                # centered around the target position to extract for oversampling
                # and peak finding. Must be >= 1.
                # Default: 64
                nchip: 64

                # The upsampling ratio. Must be >= 1.
                # Default: 32
                upsample_factor: 32

                # Option controlling how the target peak position is
                # estimated. Valid options are 'time' or 'freq'.

                # 'time':
                # The peak location is found in the time domain by detecting the
                # maximum value within a square block of image data around the
                # expected target location. The signal data is upsampled to
                # improve precision.

                # 'freq':
                # The peak location is found by estimating the phase ramp in the
                # frequency domain. This mode is useful when the target is
                # well-focused, has high SNR, and is the only target in the
                # neighborhood (often the case in point target simulations).
                # Default: time
                peak_find_domain: time

                # The width, in *oversampled* samples, of the square
                # sub-block of image data centered around the target position to
                # extract for fitting a quadratic polynomial to the peak. Note
                # that this is the size in samples *after upsampling*.
                # Must be >= 3.
                # Default: 5
                nfit: 5

                # Method to use for estimating the target signal power.
                # Valid options are 'box' or 'integrated'.

                # 'box':
                # Measures power using the rectangular box method, which assumes
                # that the target response can be approximated by a 2-D
                # rectangular function. The total power is estimated by
                # multiplying the peak power by the 3dB response widths in
                # along-track and cross-track directions.

                # 'integrated':
                # Measures power using the integrated power method. The total
                # power is measured by summing the power of bins whose power
                # exceeds a predefined minimum power threshold.
                # Default: box
                power_method: box

                # The minimum power threshold, measured in dB below the
                # peak power, for estimating the target signal power using the
                # integrated power method. This parameter is ignored if
                # `power_method` is not 'integrated'.
                # Default: 3.0
                power_threshold: 3.0

            noise_estimation:
                # *REQUIRED* Frequency group in raw L0B H5 file. Must be in {'A', 'B'}.
                freq_group:

                # *REQUIRED* Tx and Rx polarizations in raw L0B file. Must be in {'HH',
                # 'HV', 'VH', 'VV', 'LH', 'LV', 'RH', 'RV'}.
                pol:

                # Start range bins for beams. A list of range sample indices or null.
                # If rng_start and rng_stop are both null, noise power is estimated over
                # the full rangeline. Defaults to null.
                rng_start: null

                # Stop range bins for beams. A list of range sample indices or null.
                # If rng_start and rng_stop are both null, noise power is estimated over
                # the full rangeline. Defaults to null.
                rng_stop: null

                # Noise estimation algorithm: 'avg' - mean of sum of squares, or 'evd' -
                # Eigenvalue Decomposition. Defaults to 'avg'.
                algorithm: avg

                # Coherent processing interval in number of range lines. Only used when
                # algorithm='evd'. Must be >= 1. Defaults to 2.
                cpi: 2

            point_target_analyzer:
                # The width, in samples, of the square block of image data
                # centered around the target position to extract for oversampling
                # and peak finding. Must be >= 1.
                # Default: 64
                nchip: 64

                # The upsampling ratio. Must be >= 1.
                # Default: 32
                upsample_factor: 32

                # Option controlling how the target peak position is
                # estimated. Valid options are 'time' or 'frequency'.

                # 'time':
                # The peak location is found in the time domain by detecting the
                # maximum value within a square block of image data around the
                # expected target location. The signal data is upsampled to
                # improve precision.

                # 'frequency':
                # The peak location is found by estimating the phase ramp in the
                # frequency domain. This mode is useful when the target is
                # well-focused, has high SNR, and is the only target in the
                # neighborhood (often the case in point target simulations).
                # Default: time
                peak_find_domain: time

                # The number of sidelobes, including the main lobe, to
                # use for computing the integrated sidelobe ratio (ISLR).
                # Must be > 1.
                # Default: 10
                num_sidelobes: 10

                # Controls how the main lobe null locations are
                # determined for ISLR computation. If `predict_null` is true, the
                # null locations are determined analytically by assuming that the
                # corner reflector has the impulse response of a point target with
                # known sampling-rate-to-bandwidth ratio (given by `fs_bw_ratio`)
                # and range & azimuth spectral windows (given by `window_type` &
                # `window_parameter`). In this case, the first sidelobe will be
                # considered to be part of the main lobe. Alternatively, if
                # `predict_null` is false, the apparent null locations will be
                # estimated from the RSLC image data by searching for nulls in
                # range & azimuth cuts centered on the target location. In this
                # case, the main lobe does *not* include the first sidelobe.
                # `predict_null` has no effect on peak-to-sidelobe ratio (PSLR)
                # computation -- for PSLR analysis, the null locations are always
                # determined by searching for nulls in the RSLC data.
                # Default: True
                predict_null: True

                # The ratio of sampling rate to bandwidth in the RSLC
                # image data. Must be the same for both range & azimuth. It is
                # ignored if `predict_null` was false. Must be > 0.
                # Default: 1.2
                fs_bw_ratio: 1.2

                # The window type used in RSLC formation. Used to predict
                # the locations of main lobe nulls during ISLR processing if
                # `predict_null` was true. It is ignored if `predict_null` was
                # false. The same window type is assumed to have been used for
                # both range & azimuth focusing. Valid options are 'rect',
                # 'cosine', or 'kaiser'.

                # 'rect':
                # Assumes that the RSLC image was formed using a
                # rectangular-shaped window (i.e. no spectral weighting was
                # applied).

                # 'cosine':
                # Assumes that the RSLC image was formed using a raised-cosine
                # window with pedestal height defined by `window_parameter`.

                # 'kaiser':
                # Assumes that the RSLC image was formed using a Kaiser window
                # with beta parameter defined by `window_parameter`.
                # Default: rect
                window_type: rect

                # The window shape parameter used in RSLC formation. The
                # meaning of this parameter depends on the `window_type`. For a
                # raised-cosine window, it is the pedestal height of the window
                # and must be in the interval [0, 1]. For a Kaiser window, it is
                # the beta parameter and must be >= 0. It is ignored if
                # `window_type` was 'rect' or if `predict_null` was false. The
                # same shape parameter is assumed to have been used for both range
                # & azimuth focusing.
                # Default: 0.0
                window_parameter: 0.0
